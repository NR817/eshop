{"version":3,"file":"main.js","mappings":"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","sources":["./apps/ngshop/src/app/app.component.ts","./apps/ngshop/src/app/app.component.html","./apps/ngshop/src/app/app.module.ts","./apps/ngshop/src/app/pages/home-page/home-page.component.ts","./apps/ngshop/src/app/pages/home-page/home-page.component.html","./apps/ngshop/src/app/shared/footer/footer.component.ts","./apps/ngshop/src/app/shared/footer/footer.component.html","./apps/ngshop/src/app/shared/header/header.component.ts","./apps/ngshop/src/app/shared/header/header.component.html","./apps/ngshop/src/app/shared/messages/messages.component.ts","./apps/ngshop/src/app/shared/messages/messages.component.html","./apps/ngshop/src/app/shared/nav/nav.component.ts","./apps/ngshop/src/app/shared/nav/nav.component.html","./apps/ngshop/src/main.ts","./environments/environment.ts","./libs/orders/src/index.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.html","./libs/orders/src/lib/components/order-summary/order-summary.component.ts","./libs/orders/src/lib/components/order-summary/order-summary.component.html","./libs/orders/src/lib/models/cart.ts","./libs/orders/src/lib/models/order-item.ts","./libs/orders/src/lib/models/order.ts","./libs/orders/src/lib/orders.module.ts","./libs/orders/src/lib/pages/cart-page/cart-page.component.ts","./libs/orders/src/lib/pages/cart-page/cart-page.component.html","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.ts","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.html","./libs/orders/src/lib/pages/thank-you/thank-you.component.ts","./libs/orders/src/lib/pages/thank-you/thank-you.component.html","./libs/orders/src/lib/services/cart.service.ts","./libs/orders/src/lib/services/orders.service.ts","./libs/products/src/index.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.html","./libs/products/src/lib/components/featured-products/featured-products.component.ts","./libs/products/src/lib/components/featured-products/featured-products.component.html","./libs/products/src/lib/components/product-item/product-item.component.ts","./libs/products/src/lib/components/product-item/product-item.component.html","./libs/products/src/lib/components/products-search/products-search.component.ts","./libs/products/src/lib/components/products-search/products-search.component.html","./libs/products/src/lib/models/category.ts","./libs/products/src/lib/models/product.ts","./libs/products/src/lib/pages/product-details/product-details.component.ts","./libs/products/src/lib/pages/product-details/product-details.component.html","./libs/products/src/lib/pages/products-list/products-list.component.ts","./libs/products/src/lib/pages/products-list/products-list.component.html","./libs/products/src/lib/products.module.ts","./libs/products/src/lib/services/categories.service.ts","./libs/products/src/lib/services/products.service.ts","./libs/ui/src/index.ts","./libs/ui/src/lib/components/banner/banner.component.ts","./libs/ui/src/lib/components/banner/banner.component.html","./libs/ui/src/lib/components/gallery/gallery.component.ts","./libs/ui/src/lib/components/gallery/gallery.component.html","./libs/ui/src/lib/ui.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/models/user.ts","./libs/users/src/lib/pages/login/login.component.ts","./libs/users/src/lib/pages/login/login.component.html","./libs/users/src/lib/services/auth-guard.service.ts","./libs/users/src/lib/services/auth.service.ts","./libs/users/src/lib/services/jwt.interceptor.ts","./libs/users/src/lib/services/localstorage.service.ts","./libs/users/src/lib/services/users.service.ts","./libs/users/src/lib/state/users.actions.ts","./libs/users/src/lib/state/users.effects.ts","./libs/users/src/lib/state/users.facade.ts","./libs/users/src/lib/state/users.models.ts","./libs/users/src/lib/state/users.reducer.ts","./libs/users/src/lib/state/users.selectors.ts","./libs/users/src/lib/users.module.ts"],"sourcesContent":["/* eslint-disable @angular-eslint/component-selector */\nimport { Component, OnInit } from '@angular/core';\nimport { UsersService } from '@nr-space/users';\n\n@Component({\n  selector: 'ngshop-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  constructor(private usersService: UsersService) {}\n  title = 'ngshop';\n\n  ngOnInit(): void {\n      this.usersService.initAppSession();\n  }\n\n}\n","\n<div class=\"container\">\n<ngshop-messages></ngshop-messages>\n<ngshop-header></ngshop-header>\n<router-outlet></router-outlet>\n<ngshop-footer></ngshop-footer>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxStripeModule } from 'ngx-stripe';\n\n\nimport { ProductsModule } from '@nr-space/products';\nimport { UiModule } from '@nr-space/ui';\nimport { OrdersModule } from '@nr-space/orders';\nimport { JwtInterceptor, UsersModule } from '@nr-space/users';\n\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { NavComponent } from './shared/nav/nav.component';\nimport { MessagesComponent } from './shared/messages/messages.component';\n\nimport { AccordionModule } from 'primeng/accordion';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomePageComponent\n    }\n];\n\n@NgModule({\n    declarations: [AppComponent, HomePageComponent, HeaderComponent, FooterComponent, NavComponent, MessagesComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        RouterModule.forRoot(routes),\n        HttpClientModule,\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        UsersModule,\n        AccordionModule,\n        ProductsModule,\n        UiModule,\n        OrdersModule,\n        ToastModule,\n        NgxStripeModule.forRoot('pk_test_51KVx4qLcRpdNDQPmIxZhLCVOd4dJay2FUkExNdj78ZwCpsP9T8z3Vzyuuug3JJeDSpMiOLTU03Dv2CBb2zogmfze003Hu3BPPD')\n    ],\n    providers: [MessageService,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true}],\n    bootstrap: [AppComponent],\n    exports: [MessagesComponent]\n})\nexport class AppModule {}\n","/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngshop-home-page',\n  templateUrl: './home-page.component.html'\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ui-banner></ui-banner>\n<products-categories-banner></products-categories-banner>\n<products-featured-products></products-featured-products>\n\n","/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngshop-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"grid footer-wrapper\">\n        <div class=\"col-8\">&copy; 2022 Online-Shop</div>\n        <div class=\"col-4 social\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\"><i class=\"pi pi-facebook\"></i></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\"><i class=\"pi pi-twitter\"></i></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\"><i class=\"pi pi-youtube\"></i></a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</footer>\n","/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngshop-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <div class=\"logo\">\n                <img src=\"assets/images/logo.png\" alt=\"logo\">\n            </div>\n        </div>\n        <div class=\"col-4 search\">\n            <products-search></products-search>\n        </div>\n        <div class=\"col-3 col-offset-1 navigation\">\n            <ngshop-nav></ngshop-nav>\n        </div>\n        <div class=\"col-1 tools\">\n            <i class=\"pi pi-user p-text-secondary\" style=\"font-size: 1.5rem\"></i>\n            <orders-cart-icon></orders-cart-icon>\n        </div>\n    </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '@nr-space/orders';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'ngshop-messages',\n  templateUrl: './messages.component.html',\n  styles: []\n})\nexport class MessagesComponent implements OnInit {\n  constructor(private cartService: CartService, private messageService: MessageService) {}\n\n  ngOnInit(): void {\n    this.cartService.cart$.subscribe(() => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Cart Updated!'\n      });\n    });\n  }\n}","<p-toast></p-toast>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngshop-nav',\n  templateUrl: './nav.component.html',\n  styles: [\n  ]\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"nav\">\n    <li><a routerLink=\"/\">Home</a></li>\n    <li><a routerLink=\"/products\">Products</a></li>\n    <li><a routerLink=\"/contact\">Contact</a></li>\n</ul>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiURL: 'http://localhost:4000/api/v1/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export * from './lib/orders.module';\nexport * from './lib/models/order';\nexport * from './lib/models/order-item';\nexport * from './lib/models/cart';\nexport * from './lib/services/orders.service';\nexport * from './lib/services/cart.service';","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services/cart.service';\n\n@Component({\n  selector: 'orders-cart-icon',\n  templateUrl: './cart-icon.component.html',\n  styles: [\n  ]\n})\nexport class CartIconComponent implements OnInit {\n\n  cartCount = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.cartService.cart$.subscribe(cart => {\n      this.cartCount = cart?.items?.length ?? 0;\n    })\n  }\n\n}\n","<i\n    routerLink=\"/cart\"\n    class=\"pi pi-shopping-cart mr-4 p-text-secondary\"\n    pBadge\n    style=\"font-size: 1.5rem; cursor: pointer;\"\n    [value]=\"cartCount\"\n    severity=\"danger\"\n></i>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Product } from '@nr-space/products';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n  selector: 'orders-order-summary',\n  templateUrl: './order-summary.component.html',\n  styles: []\n})\nexport class OrderSummaryComponent implements OnInit, OnDestroy {\n\n  endSubs$: Subject<any> = new Subject();\n  totalPrice: number;\n  isCheckout = false;\n\n  constructor(\n    private router: Router ,\n    private cartService: CartService, \n    private ordersService: OrdersService\n    ) {\n      this.router.url.includes('checkout') ? this.isCheckout = true : this.isCheckout = false;\n    }\n\n  ngOnInit(): void {\n    this._getOrderSummary();\n  }\n\n  ngOnDestroy(): void {\n    this.endSubs$.complete();\n  }\n\n  _getOrderSummary() {\n    this.cartService.cart$.pipe(takeUntil(this.endSubs$)).subscribe((cart) => {\n      this.totalPrice = 0;\n      if (cart) {\n        cart.items.map((item) => {\n          this.ordersService\n            .getProduct(item.productId)\n            .pipe(take(1))\n            .subscribe((product: Product) => {\n              this.totalPrice += product.price * item.quantity;\n            });\n        });\n      }\n    });\n  }\n\n  navigateToCheckout() {\n    this.router.navigate(['/checkout'])\n  }\n}\n","<div class=\"order-summary\">\n    <h3>Order Summary</h3>\n    <div class=\"summary-price\">\n        <span>Items Price</span>\n        <span>{{ totalPrice | currency }}</span>\n    </div>\n    <div class=\"summary-price\">\n        <span>Packing & Shipping</span>\n        <span class=\"free\">Free</span>\n    </div>\n    <div class=\"to-checkout\">\n        <div class=\"summary-price\">\n            <span>Total Price</span>\n            <span>{{ totalPrice | currency }}</span>\n        </div>\n        <div class=\"checkout-button\" *ngIf=\"!isCheckout\">\n            <p-button label=\"Checkout\" (onClick)=\"navigateToCheckout()\"></p-button>\n        </div>\n    </div>\n</div>","export class Cart {\r\n    items?: CartItem[];\r\n}\r\n\r\nexport class CartItem {\r\n    productId?: string;\r\n    quantity?: number\r\n}\r\n\r\nexport class CartItemDetailed {\r\n    product?: any;\r\n    quantity?: number\r\n}","export class OrderItem {\r\n    product?: string;\r\n    quantity?: number;\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { OrderItem } from \"./order-item\";\r\n\r\nexport class Order {\r\n    id?: string;\r\n    orderItems?: OrderItem[];\r\n    shippingAddress1?: string;\r\n    shippingAddress2?: string;\r\n    city?: string;\r\n    zip?: string;\r\n    country?: string;\r\n    phone?: string;\r\n    status?: number;\r\n    totalPrice?: string;\r\n    user?: any;\r\n    dateOrdered?: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthGuard } from '@nr-space/users';\nimport { CartService } from './services/cart.service';\nimport { CartIconComponent } from './components/cart-icon/cart-icon.component';\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\nimport { CartPageComponent } from './pages/cart-page/cart-page.component';\nimport { CheckoutPageComponent } from './pages/checkout-page/checkout-page.component';\nimport { ThankYouComponent } from './pages/thank-you/thank-you.component';\n\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { DropdownModule } from 'primeng/dropdown';\n\nconst routes: Routes = [\n    {\n        path: 'cart',\n        component: CartPageComponent\n    },\n    {\n        path: 'checkout',\n        canActivate: [AuthGuard],\n        component: CheckoutPageComponent\n    },\n    {\n        path: 'success',\n        component: ThankYouComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        BadgeModule,\n        ButtonModule,\n        InputNumberModule,\n        InputTextModule,\n        InputMaskModule,\n        DropdownModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    declarations: [CartIconComponent, CartPageComponent, OrderSummaryComponent, CheckoutPageComponent, ThankYouComponent],\n    exports: [CartIconComponent, CartPageComponent, OrderSummaryComponent, CheckoutPageComponent, ThankYouComponent]\n})\nexport class OrdersModule {\n    constructor(cartService: CartService) {\n        cartService.initCartLocalStorage();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { CartItemDetailed } from '../../models/cart';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n    selector: 'orders-cart-page',\n    templateUrl: './cart-page.component.html',\n    styles: []\n})\nexport class CartPageComponent implements OnInit, OnDestroy {\n\n    cartItemsDetailed: CartItemDetailed[] = [];\n    cartCount = 0;\n    endsubs$: Subject<any> = new Subject();\n\n    constructor(private router: Router, private cartService: CartService, private ordersService: OrdersService) {}\n\n    ngOnInit(): void {\n        this._getCartDetails();\n    }\n\n    ngOnDestroy(): void {\n        this.endsubs$.complete()\n    }\n\n    private _getCartDetails() {\n        this.cartService.cart$.pipe(takeUntil(this.endsubs$)).subscribe((cart) => {\n          this.cartItemsDetailed = [];\n          this.cartCount = cart?.items?.length ?? 0;\n            cart.items.forEach((cartItem) => {\n                this.ordersService.getProduct(cartItem.productId).subscribe((product) => {\n                    this.cartItemsDetailed.push({ \n                      product, \n                      quantity: cartItem.quantity \n                    });\n                });\n            });\n        });\n    }\n\n    backToShop() {\n        this.router.navigate(['/products']);\n    }\n\n    deleteCartItem(cartItem: CartItemDetailed) {\n      this.cartService.deleteCartItem(cartItem.product.id)\n    }\n\n    updateCartItemQuantity(event, cartItem: CartItemDetailed) {\n        this.cartService.setCartItem({\n            productId: cartItem.product.id,\n            quantity: event.value\n        }, true)\n    }\n}\n","<div class=\"cart-page\">\n    <div class=\"grid\">\n        <div class=\"col-8\">\n            <div>\n                <p-button label=\"Countinue shopping\" icon=\"pi pi-arrow-left\" (onClick)=\"backToShop()\"></p-button>\n            </div>\n            <div>\n                <h4>My Cart: {{ cartCount }} Item(s)</h4>\n            </div>\n            <div class=\"cart-shipping mb-5\">Shipping after the payment, Delivery time: 1 to 4 working days.</div>\n            <div class=\"cart-item mb-3\" *ngFor=\"let cartItem of cartItemsDetailed\">\n                <div class=\"grid\">\n                    <div class=\"col-2 cart-item-image\">\n                        <img [src]=\"cartItem.product.image\" [attr.alt]=\"cartItem.product.name\" />\n                    </div>\n                    <div class=\"col-7\">\n                        <div class=\"cart-item-name\">{{ cartItem.product.name }}</div>\n                        <div class=\"cart-item-price\">{{ cartItem.product.price | currency }}</div>\n                        <div class=\"cart-item-remove\">\n                            <p-button icon=\"pi pi-trash\" (onClick)=\"deleteCartItem(cartItem)\"></p-button>\n                        </div>\n                    </div>\n                    <div class=\"col-3\">\n                        <div class=\"field p-fluid cart-item-quantity\">\n                            <p-inputNumber\n                                mode=\"decimal\"\n                                [showButtons]=\"true\"\n                                [inputId]=\"cartItem.product.id\"\n                                [min]=\"1\"\n                                [max]=\"100\"\n                                [(ngModel)]=\"cartItem.quantity\"\n                                (onInput)=\"updateCartItemQuantity($event, cartItem)\"\n                            >\n                            </p-inputNumber>\n                        </div>\n                        <div class=\"cart-item-subtotal\">\n                            Subtotal:\n                            <span class=\"cart-item-subtotal-value\">{{ cartItem.product.price * cartItem.quantity | currency }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-4\">\n            <orders-order-summary></orders-order-summary>\n        </div>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '@nr-space/users';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Cart } from '../../models/cart';\nimport { Order } from '../../models/order';\nimport { OrderItem } from '../../models/order-item';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n    selector: 'orders-checkout-page',\n    templateUrl: './checkout-page.component.html'\n})\nexport class CheckoutPageComponent implements OnInit, OnDestroy {\n    constructor(\n        private router: Router,\n        private usersService: UsersService,\n        private formBuilder: FormBuilder,\n        private cartService: CartService,\n        private ordersService: OrdersService\n    ) {}\n    checkoutFormGroup: FormGroup;\n    isSubmitted = false;\n    orderItems: OrderItem[] = [];\n    userId: string;\n    countries = [];\n    endsubs$: Subject<unknown> = new Subject();\n\n    ngOnInit(): void {\n        this._initCheckoutForm();\n        this._autoFillUserData();\n        this._getCartItems();\n        this._getCountries();\n    }\n\n    ngOnDestroy(): void {\n        this.endsubs$.complete()\n    }\n\n    private _initCheckoutForm() {\n        this.checkoutFormGroup = this.formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.email, Validators.required]],\n            phone: ['', Validators.required],\n            city: ['', Validators.required],\n            country: ['', Validators.required],\n            zip: ['', Validators.required],\n            apartment: ['', Validators.required],\n            street: ['', Validators.required]\n        });\n    }\n\n    private _getCountries() {\n        this.countries = this.usersService.getCountries();\n    }\n\n    backToCart() {\n        this.router.navigate(['/cart']);\n    }\n\n    placeOrder() {\n        this.isSubmitted = true;\n        if (this.checkoutFormGroup.invalid) {\n            return;\n        }\n            \n        const order: Order = {\n            orderItems: this.orderItems,\n            shippingAddress1: this.checkoutForm.street.value,\n            shippingAddress2: this.checkoutForm.apartment.value,\n            city: this.checkoutForm.city.value,\n            zip: this.checkoutForm.zip.value,\n            country: this.checkoutForm.country.value,\n            phone: this.checkoutForm.phone.value,\n            status: 0,\n            user: this.userId,\n            dateOrdered: `${Date.now()}`\n        };\n\n        this.ordersService.cacheOrderData(order);\n\n        this.ordersService.createCheckoutSession(this.orderItems).subscribe(error => {\n            if(error) {\n                console.log('error in redirect to payment');\n                \n            }\n        })\n\n    }\n\n    private _getCartItems() {\n        const cart: Cart = this.cartService.getCart();\n        this.orderItems = cart.items.map((item) => {\n            return {\n                product: item.productId,\n                quantity: item.quantity\n            };\n        });\n    }\n\n    private _autoFillUserData() {\n        this.usersService.observeCurrentUser().pipe(takeUntil(this.endsubs$)).subscribe(user => {\n            if (user) {\n                this.userId = user.id;\n                this.checkoutForm.name.setValue(user.name);\n                this.checkoutForm.email.setValue(user.email);\n                this.checkoutForm.phone.setValue(user.phone);\n                this.checkoutForm.city.setValue(user.city);\n                this.checkoutForm.country.setValue(user.country);\n                this.checkoutForm.zip.setValue(user.zip);\n                this.checkoutForm.apartment.setValue(user.apartment);\n                this.checkoutForm.street.setValue(user.street);\n            }\n        })\n    }\n\n    get checkoutForm() {\n        return this.checkoutFormGroup.controls;\n    }\n}\n","<div class=\"checkout-page\">\n  <div>\n    <p-button label=\"Back to cart\" icon=\"pi pi-arrow-left\" (onClick)=\"backToCart()\"></p-button>\n  </div>\n  <div class=\"grid checkout-form\">\n    <div class=\"col-8\">\n      <form [formGroup]=\"checkoutFormGroup\">\n        <div class=\"p-fluid formgrid grid\">\n          <div class=\"field col-4\">\n            <label for=\"name\">Name</label>\n            <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.name.invalid && isSubmitted\" class=\"p-error\"\n              >Name is required</small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"email\">Email</label>\n            <input formControlName=\"email\" id=\"email\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.email.invalid && isSubmitted\" class=\"p-error\"\n              ><span *ngIf=\"checkoutForm.email.errors.required\">email is required</span>\n              <span *ngIf=\"checkoutForm.email.errors.email\">email is invalid</span></small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"color\">Phone</label><br />\n            <p-inputMask\n              mask=\"(999) 999-9999\"\n              formControlName=\"phone\"\n              placeholder=\"(999) 999-9999\"\n            ></p-inputMask>\n            <small *ngIf=\"checkoutForm.phone.invalid && isSubmitted\" class=\"p-error\"\n              >phone is required</small\n            >\n          </div>\n        </div>\n        <div class=\"p-fluid formgrid grid\">\n          <div class=\"field col-4\">\n            <label for=\"street\">Street</label>\n            <input formControlName=\"street\" id=\"street\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.street.invalid && isSubmitted\" class=\"p-error\"\n              >Street is required</small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"street\">Apartment</label>\n            <input formControlName=\"apartment\" id=\"apartment\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.apartment.invalid && isSubmitted\" class=\"p-error\"\n              >Apartment is required</small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"street\">Zip Code</label>\n            <input formControlName=\"zip\" id=\"zip\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.zip.invalid && isSubmitted\" class=\"p-error\"\n              >Zip is required</small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"city\">City</label>\n            <input formControlName=\"city\" id=\"city\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.city.invalid && isSubmitted\" class=\"p-error\"\n              >City is required</small\n            >\n          </div>\n          <div class=\"field col-4\">\n            <label for=\"country\">Country</label><br />\n            <p-dropdown\n              [options]=\"countries\"\n              formControlName=\"country\"\n              optionLabel=\"name\"\n              optionValue=\"id\"\n              [filter]=\"true\"\n              filterBy=\"name\"\n              [showClear]=\"true\"\n              placeholder=\"Select a Country\"\n            ></p-dropdown>\n            <small *ngIf=\"checkoutForm.country.invalid && isSubmitted\" class=\"p-error\"\n              >Country is required</small\n            >\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"col-4\">\n      <orders-order-summary></orders-order-summary>\n      <div class=\"checkout-button\">\n        <p-button label=\"Place-Order\" (onClick)=\"placeOrder()\"></p-button>\n      </div>\n    </div>\n  </div>\n</div>\n","/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n  selector: 'orders-thank-you',\n  templateUrl: './thank-you.component.html',\n  styles: [\n  ]\n})\nexport class ThankYouComponent implements OnInit {\n\n  constructor(private ordersService: OrdersService, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    const orderData = this.ordersService.getCachedOrderData();\n    this.ordersService.createOrder(orderData).subscribe(() => {\n      this.cartService.emptyCart();\n      this.ordersService.removeCachedOrderData();\n    })\n    \n  }\n\n}\n","<div class=\"checkout-page\">\n    <div class=\"thank-you-page\">\n        <h2>Thank you for Shopping with us!</h2>\n        <h3>We have received your order and it will be delivered in the next 4 days</h3>\n        <p-button label=\"Back to shop\" routerLink=\"/\"></p-button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart, CartItem } from '../models/cart';\n\nexport const CART_KEY = 'cart';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n    cart$: BehaviorSubject<Cart> = new BehaviorSubject(this.getCart());\n\n    initCartLocalStorage() {\n        const cart: Cart = this.getCart();\n        if (!cart) {\n            const initialCart = {\n                items: []\n            };\n            const initialCartJson = JSON.stringify(initialCart);\n            localStorage.setItem(CART_KEY, initialCartJson);\n        }\n    }\n\n    emptyCart() {\n        const initialCart = {\n            items: []\n        };\n        const initialCartJson = JSON.stringify(initialCart);\n        localStorage.setItem(CART_KEY, initialCartJson);\n        this.cart$.next(initialCart);\n    }\n\n    getCart(): Cart {\n        const cart: Cart = JSON.parse(localStorage.getItem(CART_KEY));\n        return cart;\n    }\n\n    setCartItem(cartItem: CartItem, updateCartItem?: boolean): Cart {\n        const cart = this.getCart();\n        const cartItemExist = cart.items.find((item) => item.productId === cartItem.productId);\n        if (cartItemExist) {\n            cart.items.map((item) => {\n                if (item.productId === cartItem.productId) {\n                    if (updateCartItem) {\n                        item.quantity = cartItem.quantity;\n                    } else {\n                        item.quantity = item.quantity + cartItem.quantity;\n                    }\n                    return item;\n                }\n            });\n        } else {\n            cart.items.push(cartItem);\n        }\n        const cartJsonString = JSON.stringify(cart);\n        localStorage.setItem(CART_KEY, cartJsonString);\n        this.cart$.next(cart);\n        return cart;\n    }\n\n    deleteCartItem(productId: string) {\n        const cart = this.getCart();\n        const newCart = cart.items.filter((item) => item.productId !== productId);\n\n        cart.items = newCart;\n\n        const cartJsonString = JSON.stringify(cart);\n        localStorage.setItem(CART_KEY, cartJsonString);\n        this.cart$.next(cart);\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, switchMap } from 'rxjs';\r\nimport { Order } from '../models/order';\r\nimport { environment } from '@env/environment';\r\nimport { OrderItem } from '../models/order-item';\r\nimport { StripeService } from 'ngx-stripe';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n    apiURLOrders = environment.apiURL + 'orders';\r\n    apiURLProducts = environment.apiURL + 'products';\r\n    ORDER_STATUS = {\r\n        0: {\r\n            label: 'Pending',\r\n            color: 'primary'\r\n        },\r\n        1: {\r\n            label: 'Processed',\r\n            color: 'warning'\r\n        },\r\n        2: {\r\n            label: 'Shipped',\r\n            color: 'warning'\r\n        },\r\n        3: {\r\n            label: 'Delivered',\r\n            color: 'success'\r\n        },\r\n        4: {\r\n            label: 'Failed',\r\n            color: 'danger'\r\n        }\r\n    };\r\n\r\n    constructor(private http: HttpClient, private stripeService: StripeService) {}\r\n\r\n    getOrders(): Observable<Order[]> {\r\n        return this.http.get<Order[]>(this.apiURLOrders);\r\n    }\r\n\r\n    getOrder(orderId: string): Observable<Order> {\r\n        return this.http.get<Order>(`${this.apiURLOrders}/${orderId}`);\r\n    }\r\n\r\n    createOrder(order: Order): Observable<Order> {\r\n        return this.http.post<Order>(this.apiURLOrders, order);\r\n    }\r\n\r\n    updateOrder(orderStatus: { status: string }, orderId: string): Observable<Order> {\r\n        return this.http.put<Order>(`${this.apiURLOrders}/${orderId}`, orderStatus);\r\n    }\r\n\r\n    deleteOrder(orderId: string): Observable<Order> {\r\n        return this.http.delete<Order>(`${this.apiURLOrders}/${orderId}`);\r\n    }\r\n\r\n    getOrdersCount(): Observable<{ orderCount: number }> {\r\n        return this.http.get<{ orderCount: number }>(`${this.apiURLOrders}/get/count`);\r\n    }\r\n\r\n    getTotalSales(): Observable<{ totalsales: number }> {\r\n        return this.http.get<{ totalsales: number }>(`${this.apiURLOrders}/get/totalsales`);\r\n    }\r\n\r\n    getProduct(productId: string): Observable<any> {\r\n        return this.http.get<any>(`${this.apiURLProducts}/${productId}`);\r\n    }\r\n\r\n    createCheckoutSession(orderItems: OrderItem[]) {\r\n        return this.http.post(`${this.apiURLOrders}/create-checkout-session`, orderItems).pipe(\r\n            switchMap((session: { id: string }) => {\r\n                return this.stripeService.redirectToCheckout({ sessionId: session.id });\r\n            })\r\n        );\r\n    }\r\n\r\n    cacheOrderData(order: Order) {\r\n        localStorage.setItem('orderData', JSON.stringify(order));\r\n    }\r\n\r\n    getCachedOrderData(): Order {\r\n        return JSON.parse(localStorage.getItem('orderData'));\r\n    }\r\n    removeCachedOrderData() {\r\n         localStorage.removeItem('orderData');\r\n    }\r\n}\r\n","export * from './lib/products.module';\nexport * from './lib/services/categories.service';\nexport * from './lib/services/products.service';\nexport * from './lib/models/category';\nexport * from './lib/models/product';\n\n","/* eslint-disable @angular-eslint/component-selector */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Category } from '../../models/category';\nimport { CategoriesService } from '../../services/categories.service';\n\n@Component({\n  selector: 'products-categories-banner',\n  templateUrl: './categories-banner.component.html',\n  styles: [\n  ]\n})\nexport class CategoriesBannerComponent implements OnInit, OnDestroy {\n\n  categories: Category[] = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategories().pipe(takeUntil(this.endsubs$)).subscribe(categories => {      \n      this.categories = categories;\n    })\n  }\n\n  ngOnDestroy(): void {\n      this.endsubs$.complete();\n  }\n\n}\n","<div class=\"categories-banner\">\n    <h3>Categories</h3>\n    <div class=\"grid\">\n        <div class=\"col-2\" *ngFor=\"let category of categories\">\n            <div\n                class=\"category\"\n                [routerLink]=\"'/category/' + category.id\"\n                [ngStyle]=\"{ backgroundColor: category.color }\"\n            >\n                <div class=\"category-icon\">\n                    <i class=\"pi pi-{{ category.icon }}\"></i>\n                </div>\n                <div class=\"category-name\">{{ category.name }}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Product } from '../../models/product';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'products-featured-products',\n  templateUrl: './featured-products.component.html',\n  styles: [\n  ]\n})\nexport class FeaturedProductsComponent implements OnInit, OnDestroy {\n\n  featuredProducts: Product[] = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(private productsService: ProductsService) { }\n\n  ngOnInit(): void {\n    this._getFeaturedProducts();\n  }\n\n  ngOnDestroy(): void {\n      this.endsubs$.complete();\n  }\n\n  private _getFeaturedProducts() {\n    this.productsService.getFeaturedProducts(4).pipe(takeUntil(this.endsubs$)).subscribe(products => {\n      this.featuredProducts = products;\n    })\n  }\n\n}\n","<div class=\"featured-products\">\n    <h3>Featured Products</h3>\n    <div class=\"grid\">\n        <div class=\"col-3\" *ngFor=\"let product of featuredProducts\">\n            <products-product-item [product]='product'></products-product-item>\n        </div>\n    </div>\n</div>","/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input, OnInit } from '@angular/core';\nimport { CartService, CartItem } from '@nr-space/orders';\nimport { Product } from '../../models/product';\n\n@Component({\n  selector: 'products-product-item',\n  templateUrl: './product-item.component.html',\n  styles: [\n  ]\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: Product;\n  \n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n  }\n\n  addProductToCart() {\n    const cartItem: CartItem = {\n      productId: this.product.id,\n      quantity: 1\n    }\n    this.cartService.setCartItem(cartItem)\n  }\n\n}\n","<div class=\"product-item\" *ngIf=\"product\">\n    <div class=\"product-item-wrapper\">\n        <img [routerLink]=\"'/products/'+product.id\" [src]=\"product.image\" class=\"image\" [alt]=\"product.name\">\n        <h4 class=\"name\">{{ product.name }}</h4>\n        <h5 class=\"price\">{{ product.price | currency }}</h5>\n        <p-button\n        styleClass=\"mt-3 add-to-cart\"\n        label=\"Add to cart\"\n        icon=\"pi pi-shopping-cart\"\n        (onClick)=\"addProductToCart()\"\n        ></p-button>\n    </div>\n</div>","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\n/* eslint-disable @angular-eslint/component-selector */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'products-search',\n  templateUrl: './products-search.component.html',\n  styles: [\n  ]\n})\nexport class ProductsSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"products-search\">\n    <i class=\"pi pi-search\"></i>\n    <input id=\"search\" type=\"text\" name=\"search\" class=\"products-search-input\" placeholder=\"Find Products\">\n</div>","export class Category {\r\n    id?: string;\r\n    name?: string;\r\n    icon?: string;\r\n    color?: string;\r\n    checked?: boolean;\r\n}","import { Category } from \"./category\";\r\n\r\nexport class Product {\r\n    id?: string;\r\n    name?: string;\r\n    description?: string;\r\n    richDescription?: string;\r\n    image?: string;\r\n    images?: string[];\r\n    brand?: string;\r\n    price?: number;\r\n    category?: Category;\r\n    countInStock?: number;\r\n    rating?: number;\r\n    numReviews?: number;\r\n    isFeatured?: boolean;\r\n    dateCreated?: string;\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartItem, CartService } from '@nr-space/orders';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Product } from '../../models/product';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n    selector: 'products-product-details',\n    templateUrl: './product-details.component.html',\n    styles: []\n})\nexport class ProductDetailsComponent implements OnInit, OnDestroy {\n    product: Product;\n    endsubs$: Subject<any> = new Subject();\n    quantity = 1;\n\n    constructor(private productsService: ProductsService, private route: ActivatedRoute, private cartService: CartService) {}\n\n    ngOnInit(): void {\n        this.route.params.subscribe((params) => {\n            if (params.productId) {\n                this._getProduct(params.productId);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.endsubs$.complete();\n    }\n\n    private _getProduct(id: string) {\n        this.productsService\n            .getProduct(id)\n            .pipe(takeUntil(this.endsubs$))\n            .subscribe((product) => {\n                this.product = product;\n            });\n    }\n\n    addProductToCart() {\n        const cartItem: CartItem = {\n            productId: this.product.id,\n            quantity: this.quantity\n        };\n\n        this.cartService.setCartItem(cartItem);\n    }\n}\n","<div class=\"product-details\" *ngIf=\"product\">\n    <div class=\"grid\">\n        <div class=\"col-6\">\n            <ui-gallery [images]=\"product.images\"></ui-gallery>\n        </div>\n        <div class=\"col-6 product\">\n            <h2 class=\"product-name\">{{ product.name }}</h2>\n            <p class=\"product-desc\">\n                {{ product.description }}\n            </p>\n            <div class=\"product-rating\">\n                <p-rating [(ngModel)]=\"product.rating\" [cancel]=\"false\"></p-rating>\n            </div>\n            <div class=\"product-price\">\n                {{ product.price | currency }}\n                <span class=\"price-before\">{{ product.price + 18 | currency }}</span>\n            </div>\n            <div class=\"product-quantity\">\n                <div class=\"field col-12 md:col-3 p-0\">\n                    <label for=\"quantity\">Quantity</label>\n                    <p-inputNumber [(ngModel)]=\"quantity\" mode=\"decimal\" [showButtons]=\"true\" inputId=\"quantity\" [min]=\"1\" [max]=\"100\"> </p-inputNumber>\n                </div>\n            </div>\n            <div class=\"product-actions\">\n                <button \n                    pButton\n                    pRipple\n                    type=\"button\"\n                    label=\"Buy Now\"\n                    class=\"p-button-rounded mr-2\"\n                ></button>\n                <button \n                    pButton\n                    pRipple\n                    type=\"button\"\n                    label=\"Add to Cart\"\n                    class=\"p-button-rounded mr-2\"\n                    (click)=\"addProductToCart()\"\n                ></button>\n            </div>\n        </div>\n    </div>\n    <div class=\"grid product-richDesc\">\n        <div class=\"col-12\">\n            <div [innerHTML]=\"product.richDescription\"></div>\n        </div>\n    </div>\n</div>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Category } from '../../models/category';\nimport { Product } from '../../models/product';\nimport { CategoriesService } from '../../services/categories.service';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n    selector: 'products-list',\n    templateUrl: './products-list.component.html',\n    styles: []\n})\nexport class ProductsListComponent implements OnInit, OnDestroy {\n    \n    products: Product[] = [];\n    categories: Category[] = [];\n    isCategoryPage: boolean;\n    endsubs$: Subject<any> = new Subject();\n\n\n    constructor(private productsService: ProductsService, private categoriesService: CategoriesService, private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.route.params.subscribe((params) => {\n            params.categoryId ? this._getProducts([params.categoryId]) : this._getProducts();\n            params.categoryId ? (this.isCategoryPage = true) : (this.isCategoryPage = false);\n        });\n        this._getCategories();\n    }\n\n    ngOnDestroy(): void {\n        this.endsubs$.complete();\n    }\n\n    private _getProducts(categoriesFilter?: string[]) {\n        this.productsService.getProducts(categoriesFilter).pipe(takeUntil(this.endsubs$)).subscribe((products) => {\n            this.products = products;\n        });\n    }\n\n    private _getCategories() {\n        this.categoriesService.getCategories().pipe(takeUntil(this.endsubs$)).subscribe((categories) => {\n            this.categories = categories;\n        });\n    }\n\n    categoryFilter() {\n        const selectedCategories = this.categories.filter((category) => category.checked).map((category) => category.id);\n        this._getProducts(selectedCategories);\n    }\n}\n","<div class=\"products-page\">\n    <div class=\"grid\">\n        <div class=\"col-3\" *ngIf=\"!isCategoryPage\">\n            <h4>Categories</h4>\n            <div class=\"field-checkbox\" *ngFor=\"let category of categories\">\n                <p-checkbox [(ngModel)]=\"category.checked\" binary=\"true\" [inputId]=\"category.id\" (onChange)=\"categoryFilter()\"></p-checkbox>\n                <label for=\"{{category.id}}\">{{category.name}}</label>\n            </div>\n        </div>\n        <div [ngClass]=\"{'col-9': !isCategoryPage, 'col-12': isCategoryPage}\">\n            <div class=\"grid\" *ngIf=\"products\">\n                <div [ngClass]=\"{'col-4': !isCategoryPage, 'col-3': isCategoryPage}\" *ngFor=\"let product of products\">\n                    <products-product-item class=\"product-info\" [product]='product'></products-product-item>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { UiModule } from '@nr-space/ui';\n\nimport { ProductsSearchComponent } from './components/products-search/products-search.component';\nimport { CategoriesBannerComponent } from './components/categories-banner/categories-banner.component';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { FeaturedProductsComponent } from './components/featured-products/featured-products.component';\nimport { ProductsListComponent } from './pages/products-list/products-list.component';\nimport { ProductDetailsComponent } from './pages/product-details/product-details.component';\n\nimport { ButtonModule } from 'primeng/button';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { RatingModule } from 'primeng/rating';\nimport {InputNumberModule} from 'primeng/inputnumber';\n\n\nconst routes: Routes = [\n    { path: 'products', component: ProductsListComponent },\n    { path: 'category/:categoryId', component: ProductsListComponent },\n    { path: 'products/:productId', component: ProductDetailsComponent }\n];\n\n@NgModule({\n    imports: [CommonModule, RouterModule.forChild(routes), ButtonModule, CheckboxModule, FormsModule, RatingModule, InputNumberModule, UiModule],\n    declarations: [\n        ProductsSearchComponent,\n        CategoriesBannerComponent,\n        ProductItemComponent,\n        FeaturedProductsComponent,\n        ProductsListComponent,\n        ProductDetailsComponent\n    ],\n    exports: [\n        ProductsSearchComponent,\n        CategoriesBannerComponent,\n        ProductItemComponent,\n        FeaturedProductsComponent,\n        ProductsListComponent,\n        ProductDetailsComponent\n    ]\n})\nexport class ProductsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category';\nimport { environment } from '@env/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  apiURLCategories = environment.apiURL + 'categories';\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiURLCategories)\n  }\n\n  getCategory(categoryId: string): Observable<Category> {\n    return this.http.get<Category>(`${this.apiURLCategories}/${categoryId}`)\n  }\n\n  createCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(this.apiURLCategories, category)\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.apiURLCategories}/${category.id}`, category)\n  }\n\n  deleteCategory(categoryId: string): Observable<Category> {\n    return this.http.delete<Category>(`${this.apiURLCategories}/${categoryId}`)\n}\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../models/product';\r\nimport { environment } from '@env/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  apiURLProducts = environment.apiURL + 'products';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getProducts(categoriesFilter?: string[]): Observable<Product[]> {\r\n    let params = new HttpParams();\r\n    if (categoriesFilter) {\r\n      params = params.append('categories', categoriesFilter.join(','))      \r\n    }\r\n    return this.http.get<Product[]>(this.apiURLProducts, {params})\r\n  }\r\n\r\n  getProduct(productId: string): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiURLProducts}/${productId}`)\r\n  }\r\n\r\ncreateProduct(productData: FormData): Observable<Product> {\r\n    return this.http.post<Product>(this.apiURLProducts, productData)\r\n  }\r\n\r\n  updateProduct(productData: FormData, productId: string): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiURLProducts}/${productId}`, productData)\r\n  }\r\n\r\n  deleteProduct(productId: string): Observable<Product> {\r\n    return this.http.delete<Product>(`${this.apiURLProducts}/${productId}`)\r\n}\r\n\r\ngetProductsCount(): Observable<{ productCount: number}> {\r\n  return this.http.get<{ productCount: number}>(`${this.apiURLProducts}/get/count`)\r\n}\r\n\r\ngetFeaturedProducts(count: number): Observable<Product[]> {\r\n  return this.http.get<Product[]>(`${this.apiURLProducts}/get/featured/${count}`);\r\n}\r\n\r\n}","export * from './lib/ui.module';\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @angular-eslint/no-empty-lifecycle-method */\n/* eslint-disable @angular-eslint/component-selector */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-banner',\n  templateUrl: './banner.component.html',\n  styles: [\n  ]\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner\">\n    <div class=\"grid\">\n        <div class=\"col-5 col-offset-1 banner-text\">\n            <h1>The Best Products</h1>\n            <h2>in Every Category</h2>\n            <p-button label=\"See more\" icon=\"pi pi-chevron-right\" iconPos=\"right\" styleClass=\"mt-4 banner-button\"></p-button>\n        </div>\n        <div class=\"col-6 banner-image animate__animated animate__slideInLeft\">\n            <img src=\"assets/images/banner-image.svg\" alt=\"\">\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'ui-gallery',\n    templateUrl: './gallery.component.html',\n    styles: []\n})\nexport class GalleryComponent implements OnInit {\n  selectedImageUrl!: string;\n\n    @Input()\n  images!: string[];\n\n\n    ngOnInit(): void {\n        if (this.hasImages) {\n            this.selectedImageUrl = this.images[0];\n        }\n    }\n\n    changeSelectedImage(imageUrl: string) {\n      this.selectedImageUrl = imageUrl\n    }\n\n    get hasImages() {\n      return this.images?.length > 0;\n    }\n}\n","<div class=\"gallery\" *ngIf=\"hasImages\">\n    <div class=\"main-image\">\n        <img [src]=\"selectedImageUrl\" alt=\"\">\n    </div>\n    <div class=\"images\">\n        <ul>\n            <li *ngFor=\"let imageUrl of images\"\n            (click)=\"changeSelectedImage(imageUrl)\"\n            [ngStyle]=\"{'background-image': 'url('+imageUrl+')'}\"></li>\n        </ul>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { ButtonModule } from 'primeng/button';\nimport { GalleryComponent } from './components/gallery/gallery.component';\n@NgModule({\n    imports: [CommonModule, ButtonModule],\n    declarations: [\n      BannerComponent,\n      GalleryComponent\n    ],\n    exports: [\n      BannerComponent,\n      GalleryComponent\n    ]\n})\nexport class UiModule {}\n","export * from './lib/state/users.facade';\nexport * from './lib/state/users.models';\nexport * from './lib/state/users.selectors';\nexport * from './lib/state/users.reducer';\nexport * from './lib/state/users.actions';\nexport * from './lib/users.module';\nexport * from './lib/services/users.service';\nexport * from './lib/models/user';\nexport * from './lib/services/auth.service';\nexport * from './lib/services/auth-guard.service';\nexport * from './lib/services/jwt.interceptor';\n","export class User {\n    id?: string;\n    name?: string;\n    password?: string;\n    email?: string;\n    phone?: string;\n    token?: string;\n    isAdmin?: true;\n    street?: string;\n    apartment?: string;\n    zip?: string;\n    city?: string;\n    country?: string;\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { LocalstorageService } from '../../services/localstorage.service';\n\n@Component({\n    selector: 'users-login',\n    templateUrl: './login.component.html',\n    styles: []\n})\nexport class LoginComponent implements OnInit {\n    loginFormGroup: FormGroup;\n    isSubmitted = false;\n    authError = false;\n    authMessage = 'Wrong Password or Email';\n\n    constructor(\n        private formBuilder: FormBuilder, \n        private auth: AuthService, \n        private localstorageService: LocalstorageService,\n        private router: Router\n        ) {}\n\n    ngOnInit(): void {\n        this._initLoginForm();\n    }\n\n    private _initLoginForm() {\n        this.loginFormGroup = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required]\n        });\n    }\n\n    onSubmit() {\n        this.isSubmitted = true;\n\n        if (this.loginFormGroup.invalid) return;\n\n        this.auth.login(this.loginForm.email.value, this.loginForm.password.value).subscribe(\n            (user: User) => {\n                this.authError = false;\n                this.localstorageService.setToken(user.token);\n                this.router.navigate(['/']);\n            },\n            (err: HttpErrorResponse) => {\n                this.authError = true;\n                if (err.status !== 400) {\n                    this.authMessage = 'Error in the Server, please try again later!';\n                }\n            }\n        );\n    }\n\n    get loginForm() {\n        return this.loginFormGroup.controls;\n    }\n}\n","<div class=\"login-register\">\n    <div class=\"login-register-panel\">\n        <div class=\"grid\">\n            <div class=\"col-6\">\n                <img src=\"assets/images/login-photo.png\" alt=\"\" />\n            </div>\n            <div class=\"col-6 p-5\">\n                <h3>Welcome!</h3>\n                <h2>Login Page</h2>\n                <form [formGroup]=\"loginFormGroup\">\n                    <div class=\"grid mt-6\">\n                        <div class=\"col-12\">\n                            <div class=\"p-inputgroup\">\n                                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n                                <input type=\"text\" formControlName=\"email\" pInputText placeholder=\"Email\" />\n                            </div>\n                            <small *ngIf=\"loginForm.email.invalid && isSubmitted\" class=\"p-error\"\n                                ><span *ngIf=\"loginForm.email.errors?.required\">Email is required</span>\n                                <span *ngIf=\"loginForm.email.errors.email\">Email is invalid</span></small\n                            >\n                        </div>\n                        <div class=\"col-12\">\n                            <div class=\"p-inputgroup\">\n                                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\n                                <input type=\"password\" formControlName=\"password\" pInputText placeholder=\"Password\" />\n                            </div>\n                            <small *ngIf=\"loginForm.password.invalid && isSubmitted\" class=\"p-error\">Password is required</small>\n                        </div>\n                        <div class=\"col-12\">\n                            <p-button label=\"Login\" styleClass=\"full-width-btn\" (onClick)=\"onSubmit()\"></p-button>\n                        </div>\n                        <div class=\"col-12\" *ngIf=\"isSubmitted && authError\">\n                            <small class=\"p-error\">{{authMessage}}</small>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { LocalstorageService } from './localstorage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router, private localStorageService: LocalstorageService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const token = this.localStorageService.getToken();\n        if (token) {\n          const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n          if (tokenDecode.isAdmin && !this._tokenExpired(tokenDecode.exp)) return true;\n        }\n        this.router.navigate(['/login']);\n        return false;\n    }\n\n    private _tokenExpired(expiration: number): boolean {\n      return Math.floor(new Date().getTime() / 1000) >= expiration;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { LocalstorageService } from './localstorage.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  apiURLUsers = environment.apiURL + 'users';\n\n  constructor(private http: HttpClient, private localStorageService: LocalstorageService, private router: Router) { }\n\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.apiURLUsers}/login`, {email, password})\n  }\n\n  logout() {\n    this.localStorageService.removeToken();\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalstorageService } from './localstorage.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private localStorageService: LocalstorageService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\nconst token = this.localStorageService.getToken();\nconst isApiURL = request.url.startsWith(environment.apiURL);\n\nif(token && isApiURL) {\n  request = request.clone({\n    setHeaders: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\n    return next.handle(request);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Injectable } from '@angular/core';\n\nconst TOKEN = 'jwtToken';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalstorageService {\n    constructor() {}\n\n    setToken(data: string) {\n        localStorage.setItem(TOKEN, data);\n    }\n\n    getToken() {\n        return localStorage.getItem(TOKEN);\n    }\n\n    removeToken() {\n        localStorage.removeItem(TOKEN);\n    }\n\n    isValidToken() {\n        const token = this.getToken();\n        if (token) {\n            const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n            return !this._tokenExpired(tokenDecode.exp);\n        } else {\n            return false;\n        }\n    }\n\n    getUserIdFromToken() {\n        const token = this.getToken();\n        if (token) {\n            const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n            if (tokenDecode) {\n                return tokenDecode.userId;\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    private _tokenExpired(expiration: number): boolean {\n        return Math.floor(new Date().getTime() / 1000) >= expiration;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { environment } from '@env/environment';\nimport * as countriesLib from 'i18n-iso-countries';\nimport { UsersFacade } from '../state/users.facade';\n\ndeclare const require: (arg0: string) => countriesLib.LocaleData;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  apiURLUsers = environment.apiURL + 'users';\n\n  constructor(private http: HttpClient, private usersFacade: UsersFacade) {\n    countriesLib.registerLocale(require('i18n-iso-countries/langs/en.json'));\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiURLUsers);\n  }\n\n  getUser(userId: string): Observable<User> {\n    return this.http.get<User>(`${this.apiURLUsers}/${userId}`);\n  }\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(this.apiURLUsers, user);\n  }\n\n  updateUser(user: User): Observable<User> {\n    return this.http.put<User>(`${this.apiURLUsers}/${user.id}`, user);\n  }\n\n  deleteUser(userId: string): Observable<User> {\n    return this.http.delete<User>(`${this.apiURLUsers}/${userId}`);\n  }\n\n  getUsersCount(): Observable<{ userCount: number}> {\n    return this.http.get<{ userCount: number}>(`${this.apiURLUsers}/get/count`)\n  }\n\n  getCountry(countryKey: string): string {\n    return countriesLib.getName(countryKey, 'en')\n  }\n\n  getCountries(): { id: string; name: string }[] {\n    return Object.entries(countriesLib.getNames('en', { select: 'official' })).map((entry) => {\n      return {\n        id: entry[0],\n        name: entry[1]\n      };\n    });\n  }\n\n  initAppSession() {\n    this.usersFacade.buildUserSession();\n  }\n\n  observeCurrentUser() {\n    return this.usersFacade.currentUser$;\n  }\n\n  isCurrentUserAuth() {\n    return this.usersFacade.isAuthenticated$;\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { User } from '../models/user';\n\nexport const buildUserSession = createAction('[Users] Build User Session')\n\nexport const buildUserSessionSuccess = createAction('[Users] Build User Session Success', props<{ user: User }>());\n\nexport const buildUserSessionFailed = createAction('[Users] Build User Session Failed');\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { catchError, concatMap, map, of } from 'rxjs';\nimport { LocalstorageService } from '../services/localstorage.service';\nimport { UsersService } from '../services/users.service';\n\nimport * as UsersActions from './users.actions';\n\n@Injectable()\nexport class UsersEffects {\n    buildUserSession$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(UsersActions.buildUserSession),\n            concatMap(() => {\n                if (this.localstorageService.isValidToken()) {\n                    const userId = this.localstorageService.getUserIdFromToken();\n                    if (userId) {\n                        return this.usersService.getUser(userId).pipe(\n                            map((user) => {\n                                return UsersActions.buildUserSessionSuccess({ user });\n                            }),\n                            catchError(() => of(UsersActions.buildUserSessionFailed()))\n                        );\n                    } else {\n                        return of(UsersActions.buildUserSessionFailed());\n                    }\n                } else {\n                    return of(UsersActions.buildUserSessionFailed());\n                }\n            })\n        )\n    );\n\n    constructor(private readonly actions$: Actions, private localstorageService: LocalstorageService, private usersService: UsersService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as UsersActions from './users.actions';\nimport * as UsersSelectors from './users.selectors';\n\n@Injectable()\nexport class UsersFacade {\n\n    currentUser$ = this.store.pipe(select(UsersSelectors.getUser))\n    isAuthenticated$ = this.store.pipe(select(UsersSelectors.getUserIsAuth))\n\n    constructor(private readonly store: Store) {}\n\n    buildUserSession() {\n        this.store.dispatch(UsersActions.buildUserSession());\n    }\n}\n","/**\n * Interface for the 'Users' data\n */\nexport interface UsersEntity {\n    id: string | number; // Primary ID\n    name: string;\n}\n","import { createReducer, on, Action } from '@ngrx/store';\nimport { User } from '../models/user';\n\nimport * as UsersActions from './users.actions';\n\nexport const USERS_FEATURE_KEY = 'users';\n\nexport interface UsersState {\n    user: User;\n    isAuthenticated: boolean;\n}\n\nexport interface UsersPartialState {\n    readonly [USERS_FEATURE_KEY]: UsersState;\n}\n\nexport const initialUsersState: UsersState = {\n    user: null,\n    isAuthenticated: false\n};\n\nconst usersReducer = createReducer(\n    initialUsersState,\n    on(UsersActions.buildUserSession, (state) => ({ ...state })),\n    on(UsersActions.buildUserSessionSuccess, (state, action) => ({ ...state, user: action.user, isAuthenticated: true })),\n    on(UsersActions.buildUserSessionFailed, (state) => ({ ...state, user: null, isAuthenticated: false })),\n);\n\nexport function reducer(state: UsersState | undefined, action: Action) {\n    return usersReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { USERS_FEATURE_KEY, UsersState } from './users.reducer';\n\n// Lookup the 'Users' feature state managed by NgRx\nexport const getUsersState = createFeatureSelector<UsersState>(USERS_FEATURE_KEY);\n\nexport const getUser = createSelector(getUsersState, (state) => state.user);\n\nexport const getUserIsAuth = createSelector(getUsersState, (state) => state.isAuthenticated);\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromUsers from './state/users.reducer';\nimport { UsersEffects } from './state/users.effects';\nimport { UsersFacade } from './state/users.facade';\n\nconst usersRoutes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(usersRoutes),\n        InputTextModule,\n        ButtonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        StoreModule.forFeature(fromUsers.USERS_FEATURE_KEY, fromUsers.reducer),\n        EffectsModule.forFeature([UsersEffects])\n    ],\n    declarations: [LoginComponent],\n    providers: [UsersFacade]\n})\nexport class UsersModule {}\n"],"names":[],"sourceRoot":"webpack:///"}